stages:
  - test
  - build
  - helm-status
  - deploy


variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}
  NAMESPACE: web


test lint:
  services:
  image: node:alpine
  stage: test
  tags:
    - build
  script:
    - npm install yarn
    - yarn
    - yarn lint
  except:
    - develop
    - master
    - tags


.dev-before: &dev-before
  before_script:
    - mkdir -p /etc/deploy/
    - echo ${SANDBOX_KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
    - helm init --client-only
    - helm repo update


dev docker build:
  image: docker:latest
  stage: build
  tags:
    - build
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${CONTAINER_IMAGE}:${CI_COMMIT_SHA:0:8}  .
    - docker tag ${CONTAINER_IMAGE}:${CI_COMMIT_SHA:0:8} ${CONTAINER_IMAGE}:develop
    - docker push ${CONTAINER_IMAGE}:${CI_COMMIT_SHA:0:8}
    - docker push ${CONTAINER_IMAGE}:develop
    - docker rmi --force ${CONTAINER_IMAGE}:${CI_COMMIT_SHA:0:8}
  only:
    - develop

dev deploy status:
  image: exon/helm
  stage: helm-status
  tags:
    - develop
  environment:
    name: develop
  <<: *dev-before
  script:
    - helm status ${CI_PROJECT_NAME}
  only:
    - develop
  allow_failure: true


dev deploy:
  image: exon/helm
  stage: deploy
  tags:
    - develop
  environment:
    name: develop
  <<: *dev-before
  script:
    - cd deploy
    - helm upgrade --install  --namespace=${NAMESPACE} ${CI_PROJECT_NAME} --set image.tag=develop --set recaptcha=${RECAPCHA} --values values.yaml --values env/develop.yaml .
  only:
    - develop
  when: always
